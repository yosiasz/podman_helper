version: "3"

services:
  snipeit:
    image: snipe/snipe-it
    container_name: snipeit
    network_mode: bridge
    ports:
      - "5555:80"
    volumes:
      - ../.podman_volumes/snipeit/storage/logs:/var/www/html/storage/logs
    depends_on:
      - mariadb
    #- redis
    env_file:
      - .env
    networks:
      - snipeit-backend

  mariadb:
    image: mariadb:11.5.2
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      # https://mariadb.com/kb/en/using-healthcheck-sh/#compose-file-example
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 1s
      retries: 5

  #redis:
  #  image: redis:6.2.5-buster
  #  networks:
  #  - snipeit-backend

  adminer:
    image: adminer
    network_mode: bridge
    restart: always
    ports:
      - 8080:8080

  #mailhog:
  #  image: mailhog/mailhog:v1.0.1
  #  ports:
  # - 1025:1025
  #  - "8025:8025"
  #  networks:
  #  - snipeit-backend

volumes:
  db: {}

networks:
  snipeit-backend: {}
